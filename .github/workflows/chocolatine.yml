name: chocolatine
run-name: pain-au-chocolat #
on:
  push: 
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'


env:
  MIRROR_URL: git@github.com:EpitechPromo2027/B-DOP-200-NCY-2-1-chocolatine-julian.bottiglione.git
  EXECUTABLE: "a.out, my_hunter" 

jobs:
  check_coding_style:
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: coding-style-checker
        run: |
          check.sh $(pwd) $(pwd)
          file="coding-style-reports.log"
          if [  $(wc -c /etc/passwd | awk '{print $1}') == 0 ]
          then
            exit 0
          fi
          while read -r line
          do
            echo "::error::$line"
          done < "$file"
          exit 84

  check_program_compilation:
    needs: check_coding_style
    runs-on: ubuntu-latest
    container: 
      image: epitechcontent/epitest-docker
    
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: "actions/checkout@v3"
        with:
          fetch-depth: 0
      - run: make
        timeout-minutes: 2

      - run: make clean 

      - run: |
          for i in ${{ env.EXECUTABLE }};
          do
            if test -x $i ;then
              echo " $i file exists and is executable"
            else
              exit 84
            fi
          done
  
  run_tests:
    needs: check_program_compilation
    runs-on: ubuntu-latest
    container:
      image:  epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - run: make tests_run
        timeout-minutes: 2
  
  push_to_mirror:
    needs: run_tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
             ${{ env.MIRROR_URL }}
          ssh_private_key:
             ${{ secrets.GIT_SSH_PRIVATE_KEY }}
